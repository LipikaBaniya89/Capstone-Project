mutate(IG = case_when(
Country.Name %in% high_income_europe_na ~ "High Income Europe Na",
Country.Name %in% high_income_asia_pacific ~ "High Income Asia Pacific",
Country.Name %in% upper_middle_asia ~ "Upper Middle Asia",
Country.Name %in% upper_middle_latin_america ~ "Upper Middle Latin America",
Country.Name %in% low_middle_asia ~ "Low Middle Asia",
Country.Name %in% low_middle_africa_mena ~ "Low Middle Africa Mena",
TRUE ~ "Other"
))
trade_data <- trade_data %>%
mutate(
Exchange_rate = as.numeric(Official.exchange.rate..LCU.per.US...period.average...PA.NUS.FCRF.),
USD_per_LCU = as.numeric(1 / Official.exchange.rate..LCU.per.US...period.average...PA.NUS.FCRF.) ,
Inflation = as.numeric(Inflation..GDP.deflator..annual.....NY.GDP.DEFL.KD.ZG.),
FDI_netinflow = as.numeric(Foreign.direct.investment..net.inflows....of.GDP...BX.KLT.DINV.WD.GD.ZS.),
FDI_netoutflow = as.numeric(Foreign.direct.investment..net.outflows....of.GDP...BM.KLT.DINV.WD.GD.ZS.),
Exports_USD = as.numeric(Exports.of.goods.and.services....of.GDP...NE.EXP.GNFS.ZS.),
Imports_USD = as.numeric(Imports.of.goods.and.services....of.GDP...NE.IMP.GNFS.ZS.),
Net_Balance = Exports_USD - Imports_USD
)
impute_inflation <- function(data, country, income_group) {
# Get the years where inflation is missing
missing_years <- data %>%
filter(Country.Name == country & is.na(Inflation)) %>%
pull(Time)
for (year in missing_years) {
# Get inflation values for the same year & IG
group_data <- data %>%
filter(Time == year, IG == income_group, !is.na(Inflation))
# Outlier detection using IQR
Q1 <- quantile(group_data$Inflation, 0.25, na.rm = TRUE)
Q3 <- quantile(group_data$Inflation, 0.75, na.rm = TRUE)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# Remove outliers
filtered_data <- group_data %>%
filter(Inflation >= lower_bound & Inflation <= upper_bound)
# Compute median inflation after removing outliers
imputed_value <- median(filtered_data$Inflation, na.rm = TRUE)
#Impute the missing value in the original dataset
data <- data %>%
mutate(Inflation = ifelse(Country.Name == country & Time == year & is.na(Inflation),
imputed_value, Inflation))
}
return(data)
}
trade_data <- impute_inflation(trade_data, "Brazil", "Upper Middle Latin America")
trade_data <- impute_inflation(trade_data, "Bangladesh", "Low Middle Asia")
trade_data %>%
filter((Country.Name == "Brazil" & Time >= 1974 & Time <= 1980) |
(Country.Name == "Bangladesh" & Time >= 1974 & Time <= 1986)) %>%
select(Country.Name, Time, IG, Inflation) %>%
print()
missing_inflation <- trade_data %>%
filter(is.na(Inflation) ) %>%
select(Country.Name, Time, IG, Inflation) %>%
print()
missing_netoutflow <- trade_data %>%
filter(is.na(FDI_netoutflow) ) %>%
select(Country.Name, Time, IncomeGroup, FDI_netoutflow) %>%
print()
missing_netoutflow <- trade_data %>%
filter(is.na(FDI_netoutflow) ) %>%
select(Country.Name, Time, IG, FDI_netoutflow) %>%
print()
impute_fdi_outflow <- function(data, country, income_group, start_year = 1974, end_year = 1979) {
# Get the years where FDI_netoutflow is missing within the specified range
missing_years <- data %>%
filter(Country.Name == country, Time >= start_year, Time <= end_year, is.na(FDI_netoutflow)) %>%
pull(Time)
for (year in missing_years) {
# Get FDI_netoutflow for the same year & IG
group_data <- data %>%
filter(Time == year, IG == income_group, !is.na(FDI_netoutflow))
# Outlier detection using IQR
Q1 <- quantile(group_data$FDI_netoutflow, 0.25, na.rm = TRUE)
Q3 <- quantile(group_data$FDI_netoutflow, 0.75, na.rm = TRUE)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# Remove outliers
filtered_data <- group_data %>%
filter(FDI_netoutflow >= lower_bound & FDI_netoutflow <= upper_bound)
# Compute median FDI_netoutflow after removing outliers
imputed_value <- median(filtered_data$FDI_netoutflow, na.rm = TRUE)
# Impute the missing value in the original dataset
data <- data %>%
mutate(FDI_netoutflow = ifelse(Country.Name == country & Time == year & is.na(FDI_netoutflow),
imputed_value, FDI_netoutflow))
}
return(data)
}
trade_data <- impute_fdi_outflow(trade_data, "Indonesia", "Upper Middle Asia")
trade_data <- impute_fdi_outflow(trade_data, "Mexico", "Upper Middle Latin America")
trade_data <- impute_fdi_outflow(trade_data, "Costa Rica", "Upper Middle Latin America")
trade_data <- impute_fdi_outflow(trade_data, "Thailand", "Upper Middle Asia")
missing_netoutflow_1 <- trade_data %>%
filter(is.na(FDI_netoutflow)) %>%
select(Country.Name, Time, IG, FDI_netoutflow) %>%
print()
impute_fdi_country_level <- function(data, country, start_year = 1995, end_year = 2003) {
# Get the years where FDI_netoutflow is missing for the country within the specified range
missing_years <- data %>%
filter(Country.Name == country, Time >= start_year, Time <= end_year, is.na(FDI_netoutflow)) %>%
pull(Time)
for (year in missing_years) {
# Get past available data for the country before the missing year
past_data <- data %>%
filter(Country.Name == country, Time < year, !is.na(FDI_netoutflow))
# Outlier detection using IQR
Q1 <- quantile(past_data$FDI_netoutflow, 0.25, na.rm = TRUE)
Q3 <- quantile(past_data$FDI_netoutflow, 0.75, na.rm = TRUE)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# Remove outliers
filtered_data <- past_data %>%
filter(FDI_netoutflow >= lower_bound & FDI_netoutflow <= upper_bound)
# Compute median FDI_netoutflow after removing outliers
imputed_value <- median(filtered_data$FDI_netoutflow, na.rm = TRUE)
# Impute the missing value in the original dataset
data <- data %>%
mutate(FDI_netoutflow = ifelse(Country.Name == country & Time == year & is.na(FDI_netoutflow),
imputed_value, FDI_netoutflow))
}
return(data)
}
trade_data <- impute_fdi_country_level(trade_data, "Mexico")
trade_data <- impute_fdi_country_level(trade_data, "Indonesia")
missing_netoutflow_1 <- trade_data %>%
filter(is.na(FDI_netoutflow)) %>%
select(Country.Name, Time, IG, FDI_netoutflow) %>%
print()
trade_data <- trade_data %>%
mutate(FDI_netoutflow = ifelse(IG == "Low Middle Asia" & is.na(FDI_netoutflow), 0, FDI_netoutflow))
trade_data <- trade_data %>%
mutate(FDI_netoutflow = ifelse(IG == "Low Middle Africa Mena" & is.na(FDI_netoutflow), 0, FDI_netoutflow))
missing_netoutflow_1 <- trade_data %>%
filter(is.na(FDI_netoutflow)) %>%
select(Country.Name, Time, IG, FDI_netoutflow)
print(missing_netoutflow_1)
missing_export <- trade_data %>%
filter(is.na(Exports_USD)) %>%
select(Country.Name, Time, IG, Exports_USD) %>%
print()
impute_export <- function(data, country, income_group) {
# Get the years where exports are missing
missing_years <- data %>%
filter(Country.Name == country & is.na(Exports_USD)) %>%
pull(Time)
for (year in missing_years) {
# Get exports for the same year & IG
group_data <- data %>%
filter(Time == year, IG == income_group, !is.na(Exports_USD))
# Check if there are enough data points
if (nrow(group_data) > 1) {
# Outlier detection using IQR
Q1 <- quantile(group_data$Exports_USD, 0.25, na.rm = TRUE)
Q3 <- quantile(group_data$Exports_USD, 0.75, na.rm = TRUE)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# Remove outliers
filtered_data <- group_data %>%
filter(Exports_USD >= lower_bound & Exports_USD <= upper_bound)
# Compute median exports after removing outliers
imputed_value <- median(filtered_data$Exports_USD, na.rm = TRUE)
# Impute the missing value in the original dataset
data <- data %>%
mutate(Exports_USD = ifelse(Country.Name == country & Time == year & is.na(Exports_USD),
imputed_value, Exports_USD))
}
}
return(data)
}
trade_data <- impute_export(trade_data, "Philippines", "Low Middle Asia")
missing_exports <- trade_data %>%
filter(is.na(Exports_USD)) %>%
select(Country.Name, Time, IG, Exports_USD) %>%
print()
missing_import <- trade_data %>%
filter(is.na(Imports_USD)) %>%
select(Country.Name, Time, IG, Imports_USD) %>%
print()
impute_import <- function(data, country, income_group) {
# Get the years where exports are missing
missing_years <- data %>%
filter(Country.Name == country & is.na(Imports_USD)) %>%
pull(Time)
for (year in missing_years) {
# Get exports for the same year & IG
group_data <- data %>%
filter(Time == year, IG == income_group, !is.na(Imports_USD))
# Check if there are enough data points
if (nrow(group_data) >= 1) {
# Outlier detection using IQR
Q1 <- quantile(group_data$Imports_USD, 0.25, na.rm = TRUE)
Q3 <- quantile(group_data$Imports_USD, 0.75, na.rm = TRUE)
IQR_value <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR_value
upper_bound <- Q3 + 1.5 * IQR_value
# Remove outliers
filtered_data <- group_data %>%
filter(Exports_USD >= lower_bound & Imports_USD <= upper_bound)
# Compute median exports after removing outliers
imputed_value <- median(filtered_data$Imports_USD, na.rm = TRUE)
# Impute the missing value in the original dataset
data <- data %>%
mutate(Imports_USD = ifelse(Country.Name == country & Time == year & is.na(Imports_USD),
imputed_value, Imports_USD))
}
}
return(data)
}
trade_data <- impute_import(trade_data, "Philippines", "Upper Middle Asia")
missing_imports <- trade_data %>%
filter(is.na(Imports_USD)) %>%
select(Country.Name, Time, IG, Imports_USD) %>%
print()
trade_data <- trade_data %>%
mutate(Net_Balance = Exports_USD - Imports_USD)
missing <- trade_data %>%
filter(is.na(Net_Balance)) %>%
select(Country.Name, Time, IG, Net_Balance) %>%
print()
summary(trade_data)
data_normalized <- trade_data %>%
mutate(
USD_per_LCU = log1p(USD_per_LCU),  # Log transformation before standardization
ER = (USD_per_LCU - mean(USD_per_LCU, na.rm = TRUE)) / sd(USD_per_LCU, na.rm = TRUE),
TB = (Net_Balance - mean(Net_Balance, na.rm = TRUE)) / sd(Net_Balance, na.rm = TRUE),
IF = (Inflation - mean(Inflation, na.rm = TRUE)) / sd(Inflation, na.rm = TRUE),
FDI_NO = (FDI_netinflow - mean(FDI_netinflow, na.rm = TRUE)) / sd(FDI_netinflow, na.rm = TRUE),
FDI_NI = (FDI_netoutflow - mean(FDI_netoutflow, na.rm = TRUE)) / sd(FDI_netoutflow, na.rm = TRUE)
) %>%
ungroup()
panel_data <- pdata.frame(data_normalized, index = c( "Country.Name", "Time"))
panel_data_low_middle <- panel_data %>%
filter(IG %in% c("Low Middle Asia", "Low Middle Africa Mena", "Upper Middle Asia", "Upper Middle Latin America"))
fe_model_1 <- plm(TB ~ ER * IG,
data = panel_data_low_middle,
index = c("Country.Name", "Time"),
model = "within", effect = "individual")
summary(fe_model_1)
fe_model_2 <- plm(Net_Balance ~ ER * IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "individual")
summary(fe_model_2)
fe_model_2 <- plm(Net_Balance ~ IF * IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "individual")
summary(fe_model_2)
data_normalized <- trade_data %>%
mutate(
USD_per_LCU = log1p(USD_per_LCU),  # Log transformation before standardization
ER = (USD_per_LCU - mean(USD_per_LCU, na.rm = TRUE)) / sd(USD_per_LCU, na.rm = TRUE),
TB = (Net_Balance - mean(Net_Balance, na.rm = TRUE)) / sd(Net_Balance, na.rm = TRUE),
IF = (Inflation - mean(Inflation, na.rm = TRUE)) / sd(Inflation, na.rm = TRUE),
FDI_NO = (FDI_netinflow - mean(FDI_netinflow, na.rm = TRUE)) / sd(FDI_netinflow, na.rm = TRUE),
FDI_NI = (FDI_netoutflow - mean(FDI_netoutflow, na.rm = TRUE)) / sd(FDI_netoutflow, na.rm = TRUE)
) %>%
ungroup()
panel_data <- pdata.frame(data_normalized, index = c( "Country.Name", "Time"))
fe_model_2 <- plm(Net_Balance ~ IF * IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "individual")
summary(fe_model_2)
fe_model_2 <- plm(TB ~ IF * IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "individual")
summary(fe_model_2)
fe_model_3 <- plm(TB ~ FDI_NI * IG + FDI_NO * IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "individual")
summary(fe_model_3)
fe_model_2 <- plm(TB ~ IF * IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "individual")
summary(fe_model_2)
fe_model_21 <- plm(TB ~ IF + IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "individual")
summary(fe_model_21)
fe_model_21 <- plm(TB ~ IF * IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "twoways")
summary(fe_model_21)
fe_model_12 <- plm(TB ~ ER * IG,
data = panel_data_low_middle,
index = c("Country.Name", "Time"),
model = "within", effect = "twoway")
summary(fe_model_12)
fe_model_3 <- plm(TB ~ FDI_NI * IG + FDI_NO * IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "individual")
summary(fe_model_3)
fe_model_31 <- plm(TB ~ FDI_NI * IG + FDI_NO * IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "twoways")
summary(fe_model_31)
fe_model_11 <- plm(TB ~ ER * IG,
data = panel_data_low_middle,
index = c("Country.Name", "Time"),
model = "within", effect = "twoways")
summary(fe_model_11)
fe_model_31 <- plm(TB ~ FDI_NI * IG + FDI_NO * IG,
data = panel_data,
index = c("Country.Name", "Time"),
model = "within", effect = "twoways")
summary(fe_model_31)
ggplot(panel_data, aes(x = Inflation, y = Net_Balance, color = IG)) +
geom_point(alpha = 0.6) +
labs(title = "Effect of Inflation on Trade Balance by IG",
x = "Inflation Rate",
y = "Net Trade Balance",
color = "IG") +
theme_minimal()
ggplot(panel_data, aes(x = Inflation, y = Net_Balance, color = IG)) +
geom_point(alpha = 0.6) +
labs(title = "Effect of IF on TTB by IG",
x = "IF",
y = "TB",
color = "IG") +
theme_minimal()
ggplot(panel_data, aes(x = Inflation, y = Net_Balance, color = IG)) +
geom_point(alpha = 0.6) +
labs(title = "Effect of IF on TB by IG",
x = "IF",
y = "TB",
color = "IG") +
theme_minimal()
# Find countries with positive net trade balance
trade_surplus_countries <- trade_data %>%
group_by(Country.Name) %>%
summarize(avg_net_balance = mean(Net_Balance, na.rm = TRUE)) %>%
filter(avg_net_balance > 0)
print(trade_surplus_countries)
# Aggregate Net Balance by Country
trade_balance_map <- panel_data %>%
group_by(Country.Name) %>%
summarize(avg_net_balance = mean(Net_Balance, na.rm = TRUE))
# Join with world map
world_map <- joinCountryData2Map(trade_balance_map, joinCode = "NAME", nameJoinColumn = "Country.Name")
# Plot the world map
mapCountryData(world_map, nameColumnToPlot = "avg_net_balance",
mapTitle = "Trade Balance (Exports - Imports)",
colourPalette = "RdYlGn", addLegend = TRUE)
# Arrange data in descending order of trade balance
trade_balance_map <- trade_balance_map %>%
arrange(desc(avg_net_balance))
# Create a bar chart
ggplot(trade_balance_map, aes(x = reorder(Country.Name, avg_net_balance), y = avg_net_balance, fill = avg_net_balance)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip to make it horizontal for better readability
scale_fill_gradient(low = "red", high = "green") +  # Color scale similar to the map
labs(title = "Trade Balance (Exports - Imports) by Country",
x = "Country",
y = "Average Net Balance") +
theme_minimal()
ggplot(trade_balance_map, aes(x = reorder(Country.Name, avg_net_balance), y = avg_net_balance, fill = avg_net_balance)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip to make it horizontal for better readability
scale_fill_gradient(low = "red", high = "green") +  # Color scale similar to the map
labs(title = "TB by Country",
x = "Country",
y = "TB") +
theme_minimal()
ggplot(trade_balance_map, aes(x = reorder(Country.Name, avg_net_balance), y = avg_net_balance, fill = avg_net_balance)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip to make it horizontal for better readability
scale_fill_gradient(low = "red", high = "green") +  # Color scale similar to the map
labs(title = "Trade Balance by Country",
x = "Country",
y = "Trade Balance") +
theme_minimal()
fdi_netinflow <- panel_data %>%
group_by(Country.Name) %>%
summarize(avg_netinflow = mean(FDI_NI, na.rm = TRUE))
trade_balance_inflow <- trade_balance_inflow %>%
arrange(desc(avg_netinflow))
fdi_netinflow<- fdi_netinflow %>%
arrange(desc(avg_netinflow))
ggplot(fdi_netinflow, aes(x = reorder(Country.Name, avg_netinflow))) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip to make it horizontal for better readability
labs(title = "FDI Netinflow by Country",
x = "Country",
y = "FDI Netinflow") +
theme_minimal()
ggplot(fdi_netinflow, aes(x = reorder(Country.Name, avg_netinflow))) +
coord_flip() +  # Flip to make it horizontal for better readability
labs(title = "FDI Netinflow by Country",
x = "Country",
y = "FDI Netinflow") +
theme_minimal()
# Create a bar chart
ggplot(fdi_netinflow, aes(x = reorder(Country.Name, avg_netinflow), y =  avg_netinflow)) +
coord_flip() +  # Flip to make it horizontal for better readability
labs(title = "FDI Netinflow by Country",
x = "Country",
y = "FDI Netinflow") +
theme_minimal()
# Create a bar chart
ggplot(fdi_netinflow, aes(x = reorder(Country.Name, avg_netinflow), y =  avg_netinflow, fill = avg_netinflow)) +
coord_flip() +  # Flip to make it horizontal for better readability
labs(title = "FDI Netinflow by Country",
x = "Country",
y = "FDI Netinflow") +
theme_minimal()
# Create a bar chart
ggplot(fdi_netinflow, aes(x = reorder(Country.Name, avg_netinflow), y =  avg_netinflow, fill = avg_netinflow)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip to make it horizontal for better readability
labs(title = "FDI Netinflow by Country",
x = "Country",
y = "FDI Netinflow") +
theme_minimal()
# Aggregate Netinflow by Country
fdi_netinflow <- panel_data %>%
group_by(Country.Name) %>%
summarize(avg_netinflow = mean(FDI_NI, na.rm = TRUE)) %>%
arrange(desc(avg_netinflow)) %>%
slice_head(n = 10)  # Select only the top 10 countries
# Create a bar chart for the top 10 countries
ggplot(fdi_netinflow, aes(x = reorder(Country.Name, avg_netinflow), y = avg_netinflow, fill = avg_netinflow)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip for better readability
scale_fill_gradient(low = "blue", high = "darkblue") +  # Color scale
labs(title = "Top 10 Countries with Highest FDI Net Inflow",
x = "Country",
y = "Average FDI Net Inflow") +
theme_minimal()
fdi_netinflow <- panel_data %>%
group_by(Country.Name) %>%
summarize(avg_netinflow = mean(FDI_NI, na.rm = TRUE)) %>%
arrange(desc(avg_netinflow)) %>%
slice_head(n = 5)  # Select only the top 10 countries
# Create a bar chart for the top 10 countries
ggplot(fdi_netinflow, aes(x = reorder(Country.Name, avg_netinflow), y = avg_netinflow, fill = avg_netinflow)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip for better readability
scale_fill_gradient(low = "blue", high = "darkblue") +  # Color scale
labs(title = "Top 5 Countries with Highest FDI Net Inflow",
x = "Country",
y = "Average FDI Net Inflow") +
theme_minimal()
# Aggregate outflow by Country
fdi_netoutflow <- panel_data %>%
group_by(Country.Name) %>%
summarize(avg_netoutflow = mean(FDI_NO, na.rm = TRUE)) %>%
arrange(desc(avg_netoutflow)) %>%
slice_head(n = 5)  # Select only the top 10 countries
# Create a bar chart for the top 10 countries
ggplot(fdi_netinflow, aes(x = reorder(Country.Name, avg_netoutflow), y = avg_netoutflow, fill = avg_netoutflow)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip for better readability
scale_fill_gradient(low = "blue", high = "darkblue") +  # Color scale
labs(title = "Top 5 Countries with Highest FDI Net Outflow",
x = "Country",
y = "Average FDI Net Outflow") +
theme_minimal()
fdi_netoutflow <- panel_data %>%
group_by(Country.Name) %>%
summarize(avg_netoutflow = mean(FDI_NO, na.rm = TRUE)) %>%
arrange(desc(avg_netoutflow)) %>%
slice_head(n = 5)  # Select only the top 10 countries
ggplot(fdi_netoutflow, aes(x = reorder(Country.Name, avg_netoutflow), y = avg_netoutflow, fill = avg_netoutflow)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip for better readability
scale_fill_gradient(low = "blue", high = "darkblue") +  # Color scale
labs(title = "Top 5 Countries with Highest FDI Net Outflow",
x = "Country",
y = "Average FDI Net Outflow") +
theme_minimal()
# Aggregate outflow by Country
fdi_netoutflow <- panel_data %>%
group_by(Country.Name) %>%
summarize(avg_netoutflow = mean(FDI_NO, na.rm = TRUE)) %>%
arrange(desc(avg_netoutflow)) %>%
slice_head(n = 5)  # Select only the top 10 countries
# Create a bar chart for the top 10 countries
ggplot(fdi_netoutflow, aes(x = reorder(Country.Name, avg_netoutflow), y = avg_netoutflow, fill = avg_netoutflow)) +
geom_bar(stat = "identity") +
coord_flip() +  # Flip for better readability
scale_fill_gradient(low = "blue", high = "darkblue") +  # Color scale
labs(title = "Top 5 Countries with Highest FDI Net Outflow",
x = "Country",
y = "Average FDI Net Outflow") +
theme_minimal()
ggplot(data_normalized, aes(x = USD_per_LCU, y = Net_Balance)) +
geom_point() +
theme_minimal() +  # Minimal theme for clean visualization
labs(title = "Trade Balance vs Exchange Rate",
x = "Exchange Rate",
y = "Trade Balance")
ggplot(trade_data, aes(x = Inflation, y = Net_Balance)) +
geom_point() +
theme_minimal() +  # Minimal theme for clean visualization
labs(title = "Trade Balance vs Inflation",
x = "Inflation",
y = "Trade Balance")
